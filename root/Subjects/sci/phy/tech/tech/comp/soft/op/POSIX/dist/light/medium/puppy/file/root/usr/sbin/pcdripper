#!/bin/sh

#script depends on:
#1 cd ripping program (cdparanoia, cdda2wav, icedax)
#gtkdialog 0.7.20 or greater
#a terminal (preferably rxvt)
#cddb_query (optional) (cddb database support for automatically tagging files)
#lame (optional) (support for .mp3 files)
#flac (optional) (support for .flac files)
#metaflac (optional) (support for tagging .flac files)
#shorten (optional) (doesn't allow meta tagging) (support for .shn files)
#faac (optional) (support for .aac, .m4a, & .mp4 files)
#mac (optional) (support for lossless Monkey's audio .ape files)
#mppenc (optional) (support for musepack .mpc & mpeg plus .mpp files)
#apetag (optional) (support for tagging .ape, .mpc, & .mpp files)
#cddetect (optional) (a cli program that will find number of audio tracks on a disc)
#cd-info (optional) (a cli program that will find number of audio tracks on a disc)
#id3tag (optional) (support for id3v1 tags)
#mp3info (optional) (support for id3v1 tags) 

VERSION=3.9.3 ##by Jason Pline 2011-09-05

mo=pcdripper.mo
#lng=${LANG%.*}
# always start by sourcing the English version (to fill in gaps)
. "/usr/share/locale/en/LC_MESSAGES/$mo"
if [ -f "/usr/share/locale/${LANG%.*}/LC_MESSAGES/$mo" ];then
  . "/usr/share/locale/${LANG%.*}/LC_MESSAGES/$mo"
elif [ -f "/usr/share/locale/${LANG%_*}/LC_MESSAGES/$mo" ];then
  . "/usr/share/locale/${LANG%_*}/LC_MESSAGES/$mo"
fi

##select the file to be played upon completion of rip
AUDIOFILE=/usr/share/audio/2barks.wav

VTAG=""
EXTRATAGS=""
APETAG=""
MUSEPACK=""

##remove any temp files incase they weren't removed previously
rm -f $HOME/.config/pcdripper/tmp/pcdripper* 

##find a suitable version of gtkdialog (needs 0.7.20 or greater) currently (as of puppy 4 and maybe before)
##the executable is named gtkdialog3. Exit with a warning incase gtkdialog isn't found.
GTKDIALOG=""
if [ "`which gtkdialog4`" != "" ]; then
	GTKDIALOG=gtkdialog4
elif [ "`which gtkdialog3`" != "" ]; then
	GTKDIALOG=gtkdialog3
elif [ "`which gtkdialog`" != "" ]; then
	GTKDIALOG=gtkdialog
elif [ "$GTKDIALOG" = "" ]; then
	echo "you need to install gtkdialog"
	exit 0
fi

##find a suitable terminal
TERMINAL=""
if [ "`which rxvt`" != "" ]; then
		TERMINAL=rxvt
	elif [ "`which urxvt`" != "" ]; then
		TERMINAL=urxvt
	elif [ "`which mrxvt`" != "" ]; then
		TERMINAL=mrxvt
	elif [ "`which aterm`" != "" ]; then
		TERMINAL=aterm
	elif [ "`which materm`" != "" ]; then
		TERMINAL=materm
	elif [ "`which xterm`" != "" ]; then
		TERMINAL=xterm
	elif [ "`which Eterm`" != "" ]; then
		TERMINAL=Eterm
	elif [ "`which sakura`" != "" ]; then
		TERMINAL=sakura
	elif [ "`which konsole`" != "" ]; then
		TERMINAL=konsole
	elif [ "`which gnome-terminal`" != "" ]; then
		TERMINAL=gnome-terminal
	elif [ "`which xfce4terminal`" != "" ]; then
		TERMINAL=xfce4terminal
	elif [ "`which xfce4term`" != "" ]; then
		TERMINAL=xfce4term
	elif [ "`which xfce4-term`" != "" ]; then
		TERMINAL=xfce4-term
fi

##find a suitable defaulthtmlviewer for the help html.
DEFAULTHTMLVIEWER=""
if [ "`which defaulthtmlviewer`" != "" ]; then
	DEFAULTHTMLVIEWER=`which defaulthtmlviewer`
	elif [ "`which gtkmoz`" != "" ]; then
		DEFAULTHTMLVIEWER=`which gtkmoz`
	elif [ "`which dillo`" != "" ]; then
		DEFAULTHTMLVIEWER=`which dillo`
	elif [ "`which hv3`" != "" ]; then
		DEFAULTHTMLVIEWER=`which hv3`
	elif [ "`which netsurf`" != "" ]; then
		DEFAULTHTMLVIEWER=`which netsurf`
	elif [ "`which kazehakase`" != "" ]; then
		DEFAULTHTMLVIEWER=`which kazehakase`
	elif [ "`which skipstone`" != "" ]; then
		DEFAULTHTMLVIEWER="skipstone"
	elif [ "`which links2`" != "" ]; then
		DEFAULTHTMLVIEWER="links2 -g"
	elif [ "`which opera`" != "" ]; then
		DEFAULTHTMLVIEWER=`which opera`
	elif [ "`which firefox`" != "" ]; then
		DEFAULTHTMLVIEWER=`which firefox`
	elif [ "`which seamonkey`" != "" ]; then
		DEFAULTHTMLVIEWER=`which seamonkey`
	elif [ "`which epiphany`" != "" ]; then
		DEFAULTHTMLVIEWER=`which epiphany`
	elif [ "`which konqueror`" != "" ]; then
		DEFAULTHTMLVIEWER=`which konqueror`
	elif [ "`which lynx`" != "" ]; then
		DEFAULTHTMLVIEWER="$TERMINAL -e lynx"
	elif [ "`which links`" != "" ]; then
		DEFAULTHTMLVIEWER="$TERMINAL -e links"
	elif [ "`which w3m`" != "" ]; then
		DEFAULTHTMLVIEWER="$TERMINAL -e w3m"
fi

##find a suitable cli wavplayer to play a sound when script is finished
PLAY=""
if [ "`which mplayer`" != "" ]; then
	PLAY=mplayer
	elif [ "`which wavplay`" != "" ]; then
		PLAY=wavplay
	elif [ "`which aplay`" != "" ]; then
		PLAY=aplay
	elif [ "`which play`" != "" ]; then ##sox
		PLAY=play
fi

##exit program incase a terminal isn't in your $PATH
if [ "$TERMINAL" = "" ]; then	
	export MAIN_DIALOG="
	<vbox>
		<text wrap=\"true\" width-chars=\"40\">
			<label>$L1</label>
		</text>
		<hbox>
			<button>
				<input file icon=\"gtk-ok\"></input>
				<label>$L2</label>
				<action type=\"exit\">Exit-now</action>
			</button>
		</hbox>
	</vbox>
	"
	NORXVT=`$GTKDIALOG --program=MAIN_DIALOG --center`
	exit 0
fi

##exit program incase a supported cdripper isn't in your $PATH
CDRIPPER2=""
if [ "`which cdparanoia`" != "" ]; then	
	CDRIPPER2=cdparanoia
	echo true > $HOME/.config/pcdripper/cdparanoia
fi
if [ "`which cdda2wav`" != "" ]; then
	CDRIPPER2=cdda2wav
	echo true > $HOME/.config/pcdripper/cdda2wav
fi
if [ "`which icedax`" != "" ]; then
	CDRIPPER2=icedax
	echo true > $HOME/.config/pcdripper/icedax
fi
if [ "$CDRIPPER2" = "" ]; then
	export MAIN_DIALOG="
	<vbox>
		<text wrap=\"true\" width-chars=\"40\">
			<label>$L3</label>
		</text>
		<hbox>
			<button>
				<input file icon=\"gtk-ok\"></input>
				<label>$L2</label>
				<action type=\"exit\">Exit-now</action>
			</button>
		</hbox>
	</vbox>
	"
	NOCDRIPPER=`$GTKDIALOG --program=MAIN_DIALOG --center`
	exit 0
fi

##make the home config directory (incase it doesn't already exist)
mkdir -p $HOME/.config/pcdripper/tmp
rm -f $HOME/.config/pcdripper/tmp/*

##I wanted to make the script not depend on probedisk to find your cd drives
##so I scanned /dev/ & /media/ (used in other distros) for cd & dvd
#if [ "`which probedisk`" != "" ]; then #probedisk doesn't work the way it used to so using probepart now
#probedisk | grep -i cd-*rom | cut -f 1 -d '|' 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
if [ "`which probepart`" != "" ]; then
	probepart | grep -i iso9660 | cut -f 1 -d '|' 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
else
	ls /dev/cd* 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
	ls /dev/dvd* 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
	ls /dev/scd* 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
	ls /dev/sr* 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
	ls /media/cd* 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
	ls /media/dvd* 2>/dev/null >> $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
fi

#I've noticed sometimes the combobox doesn't get populated so this is a safeguard to at least add /dev/cdrom
if [ "`cat $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK`" = "" ]; then
	echo /dev/cdrom > $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK
fi

##add the found drives to the combobox in the gui
PROBEDRIVES=""
	for ONEDRIVE in `cat $HOME/.config/pcdripper/tmp/pcdripper-PROBEDISK`
	do
		PROBEDRIVES="$PROBEDRIVES<item>$ONEDRIVE</item>"
	done

##find the encoders for the supported file formats 
echo wav > $HOME/.config/pcdripper/pcdripper-formats
if [ "`which flac`" != "" ]; then
	echo flac >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which shorten`" != "" ]; then
	echo shn >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which lame`" != "" ]; then
	echo mp3 >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which oggenc`" != "" ]; then
	echo ogg >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which ffmpeg`" != "" ]; then
	echo wma >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which mac`" != "" ]; then
	echo ape >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which faac`" != "" ]; then
	echo mp4 >> $HOME/.config/pcdripper/pcdripper-formats
	echo m4a >> $HOME/.config/pcdripper/pcdripper-formats
	echo aac >> $HOME/.config/pcdripper/pcdripper-formats
fi
if [ "`which mppenc`" != "" ]; then
	echo mpp >> $HOME/.config/pcdripper/pcdripper-formats
	echo mpc >> $HOME/.config/pcdripper/pcdripper-formats
fi
cat $HOME/.config/pcdripper/pcdripper-formats | sort > $HOME/.config/pcdripper/pcdripper-formats2
mv $HOME/.config/pcdripper/pcdripper-formats2 $HOME/.config/pcdripper/pcdripper-formats
if ! [ -f $HOME/.config/pcdripper/chosenformat ]; then
	echo wav > $HOME/.config/pcdripper/chosenformat
fi

##add the found encoders to the gui
FORMATS=""
for ONEFORMAT in `cat $HOME/.config/pcdripper/pcdripper-formats`
do
	FORMATS="$FORMATS  
      <menuitem>
      <label>$ONEFORMAT</label>
      <action>echo $ONEFORMAT | tee $HOME/.config/pcdripper/chosenformat</action>
      <action>refresh:WORD</action>
		</menuitem>"
done

##this part is for the config directory so the gui will be populated with these defaults
##and after you make changes & restart the program your options from the last session will
##be the same as last time
if ! [ -f $HOME/.config/pcdripper/cbox1 ]; then
	echo false > $HOME/.config/pcdripper/cbox1
else
	if [ "`cat $HOME/.config/pcdripper/cbox1 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox1 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox1
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox2 ]; then
	echo false > $HOME/.config/pcdripper/cbox2
else
	if [ "`cat $HOME/.config/pcdripper/cbox2 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox2 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox2
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox3 ]; then
	echo false > $HOME/.config/pcdripper/cbox3
else
	if [ "`cat $HOME/.config/pcdripper/cbox3 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox3 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox3
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox4 ]; then
	echo false > $HOME/.config/pcdripper/cbox4
else
	if [ "`cat $HOME/.config/pcdripper/cbox4 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox4 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox4
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox5 ]; then
	echo false > $HOME/.config/pcdripper/cbox5
else
	if [ "`cat $HOME/.config/pcdripper/cbox5 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox5 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox5
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox6 ]; then
	echo true > $HOME/.config/pcdripper/cbox6
else
	if [ "`cat $HOME/.config/pcdripper/cbox6 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox6 | grep false`" = "" ]; then
			echo true > $HOME/.config/pcdripper/cbox6
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox7 ]; then
	echo false > $HOME/.config/pcdripper/cbox7
else
	if [ "`cat $HOME/.config/pcdripper/cbox7 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox7 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox7
		fi
	fi
fi
if ! [ -f $HOME/.config/pcdripper/cbox8 ]; then
	echo false > $HOME/.config/pcdripper/cbox8
else
	if [ "`cat $HOME/.config/pcdripper/cbox8 | grep true`" = "" ]; then
		if [ "`cat $HOME/.config/pcdripper/cbox8 | grep false`" = "" ]; then
			echo false > $HOME/.config/pcdripper/cbox8
		fi
	fi
fi

if [ "`which cddb_query`" != "" ]; then
	echo true > $HOME/.config/pcdripper/cddb_query
fi

cbox1=`cat $HOME/.config/pcdripper/cbox1`
cbox2=`cat $HOME/.config/pcdripper/cbox2`
cbox3=`cat $HOME/.config/pcdripper/cbox3`
cbox4=`cat $HOME/.config/pcdripper/cbox4`
cbox5=`cat $HOME/.config/pcdripper/cbox5`
cbox6=`cat $HOME/.config/pcdripper/cbox6`
cbox7=`cat $HOME/.config/pcdripper/cbox7`
cbox8=`cat $HOME/.config/pcdripper/cbox8`
if [ $cbox6 = true ]; then
	cbox6depend=disabled
else
	cbox6depend=enabled
fi

if ! [ -f $HOME/.config/pcdripper/savedir ]; then
	echo $HOME > $HOME/.config/pcdripper/savedir
fi

if [ "`cat $HOME/.config/pcdripper/savedir`" = "" ]; then
	echo $HOME > $HOME/.config/pcdripper/savedir
fi

if ! [ -f $HOME/.config/pcdripper/nameformat ]; then
	echo TN > $HOME/.config/pcdripper/nameformat
fi

touch $HOME/.config/pcdripper/tmp/pcdripper-0

##The main gui is now ready to be built
export RIPGUI="
<window title=\"Pcdripper-$VERSION \"icon-name=\"gtk-cdrom\">
	<hbox>
		<vbox>
			<hbox>
				<menubar>
					<menu>
						<menuitem icon=\"gtk-execute\">
							<label>$L5</label>
							<action type=\"exit\">TIME_TO_RIP</action>
						</menuitem>
						<menuitem icon=\"gtk-cdrom\">
							<label>$L6</label>
							<action type=\"exit\">SCAN_CD_NOW</action>
						</menuitem>
						"
						if [ "`which cddb_query`" != "" ]; then
							RIPGUI="$RIPGUI
							<menuitem icon=\"gtk-cdrom\">
								<label>cddb_query scan</label>
								<action type=\"exit\">CDDB_SCAN_NOW</action>
							</menuitem>"
						fi
						if [ "`which cddetect`" != "" ]; then
							RIPGUI="$RIPGUI
							<menuitem icon=\"gtk-cdrom\">
								<label>cddetect scan</label>
								<action type=\"exit\">CDDETECT_SCAN</action>
							</menuitem>"
						fi
						if [ "`which cd-info`" != "" ]; then
							RIPGUI="$RIPGUI
							<menuitem icon=\"gtk-cdrom\">
								<label>cd-info scan</label>
								<action type=\"exit\">CD-INFO_SCAN</action>
							</menuitem>"
						fi
						if [ "$DEFAULTHTMLVIEWER" != "" ]; then
							RIPGUI="$RIPGUI
							<menuitem icon=\"gtk-help\">
								<label>$L7</label>
								<action>$DEFAULTHTMLVIEWER file:///usr/share/doc/pcdripper.htm &</action>
							</menuitem>
							"
						fi
						RIPGUI="$RIPGUI
						<menuitem icon=\"gtk-quit\">
							<label>$L9</label>
							<action type=\"exit\">EXIT_NOW</action>
						</menuitem>
						<label>[ $L10 ]</label>
					</menu>
				</menubar>
  
				<menubar>
					<menu>
						$FORMATS
						<label>[ $L11 ]</label>
					</menu>
				</menubar>
				<button>
					<input file stock=\"gtk-quit\"></input>
					<label>$L9</label>
					<action type=\"exit\">EXIT_NOW</action>
				</button>
			</hbox>

	<frame $L0>

			<hbox>
				<text><label>$L12</label></text>
				<combobox>
					<variable>PROBECOMBO</variable>
					$PROBEDRIVES
				</combobox>
			</hbox>
    
			<frame $L13>
				<hbox>
					<entry accept=\"directory\">
						<label>$L14</label>
						<variable>ENTRY1</variable>
						<input>cat $HOME/.config/pcdripper/savedir</input>
					</entry>
					<button>
						<input file stock=\"gtk-open\"></input>
						<variable>FILE_BROWSE_DIRECTORY</variable>
						<action type=\"fileselect\">ENTRY1</action>
					</button>

				</hbox>
			</frame>
  
		<frame $L15>
			<hbox>
				"
				if [ "`which cdda2wav`" != "" ]; then
					RIPGUI="$RIPGUI
					<radiobutton active=\"`cat $HOME/.config/pcdripper/cdda2wav`\">
						<label>$L16 cdda2wav</label>
						<variable>CDDA2WAV</variable>
					</radiobutton>
					"
				fi
				if [ "`which icedax`" != "" ]; then
					RIPGUI="$RIPGUI
					<radiobutton active=\"`cat $HOME/.config/pcdripper/icedax`\">
						<label>$L16 icedax</label>
						<variable>ICEDAX</variable>
					</radiobutton>
					"
				fi
				if [ "`which cdparanoia`" != "" ]; then
					RIPGUI="$RIPGUI
					<radiobutton active=\"`cat $HOME/.config/pcdripper/cdparanoia`\">
						<label>$L16 cdparanoia</label>
						<variable>CDPARANOIA</variable>
						<action>if false disable:CHECKBOX1</action>
						<action>if false disable:CHECKBOX2</action>
						<action>if false disable:CHECKBOX3</action>
						<action>if false disable:CHECKBOX4</action>
						<action>if true enable:CHECKBOX1</action>
						<action>if true enable:CHECKBOX2</action>	      
						<action>if true enable:CHECKBOX4</action>
					</radiobutton>
					"
				fi
				RIPGUI="$RIPGUI
			</hbox>
			<hbox>
				<radiobutton active=\"true\">
					<label>$L17</label>
					<variable>MANUAL</variable>
					<action>if true disable:CHECKBOX3</action>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>$L18</label>
					<variable>NOTAGS</variable>
					<action>if true enable:ENTRY2</action>
					<action>if false disable:ENTRY2</action>
					<action>if true disable:ENTRY4</action>
					<action>if false enable:ENTRY4</action>
					<action>if true enable:CHECKBOX3</action>
				</radiobutton>
				<radiobutton active=\"`cat $HOME/.config/pcdripper/cddb_query`\">
					<label>$L19</label>
					<variable>CDDBQUERY</variable>
					<action>if true disable:CHECKBOX3</action>
				</radiobutton>
			</hbox>
			"
			if [ "`which cdparanoia`" != "" ]; then
				RIPGUI="$RIPGUI
				<hbox>
					<checkbox>
						<label>$L20 paranoia               </label>
						<variable>CHECKBOX1</variable>
						<default>$cbox1</default>
					</checkbox>
					<checkbox>
						<label>$L21</label>
						<variable>CHECKBOX2</variable>
						<default>$cbox2</default>
					</checkbox>
				</hbox>
				<hbox>
					<checkbox>
						<label>$L22           </label>
						<variable>CHECKBOX3</variable>
						<default>$cbox3</default>
						<visible>disabled</visible>
					</checkbox>
					<checkbox>
						<label>$L23</label>
						<variable>CHECKBOX4</variable>
						<default>$cbox4</default>
					</checkbox>
				</hbox>
				"
			fi
			RIPGUI="$RIPGUI
			<hbox>
				<checkbox>
					<label>$L24                              </label>
					<variable>CHECKBOX5</variable>
					<default>$cbox5</default>
				</checkbox>
				<checkbox>
					<label>$L25</label>
					<variable>CHECKBOX6</variable>
					<default>$cbox6</default>
					<action>if true disable:ENTRY3</action>
					<action>if false enable:ENTRY3</action>
				</checkbox>
			</hbox>
			"
			if [ "$PLAY" != "" ]; then
				RIPGUI="$RIPGUI
				<hbox>
					<checkbox>
						<label>$L26                      </label>
						<variable>CHECKBOX8</variable>
						<default>$cbox8</default>
					</checkbox>
					<checkbox>
						<label>$L68</label>
						<variable>CHECKBOX7</variable>
						<default>$cbox7</default>
					</checkbox>

				</hbox>
				"
			fi
			RIPGUI="$RIPGUI
		</frame>
    
		<hbox>
			<text><label>$L27</label></text>
			<entry>
				<variable>ENTRY2</variable>
				<visible>disabled</visible>
			</entry>
		</hbox>
   
		<frame $L28>
			<hbox>
				<text><label>$L29</label></text>
				<entry>
					<variable>ENTRY3</variable>
					<visible>$cbox6depend</visible>
				</entry>
			</hbox>  
		</frame>

		<frame $L30>
			<hbox>
				<text><label>$L31</label></text>
				<entry>
					<variable>ENTRY4</variable>
					<input>cat $HOME/.config/pcdripper/nameformat</input>
					<visible>enabled</visible>
				</entry>
			</hbox>  
		</frame>
    
		<hbox>
			<text><label>$L32:</label></text>
			<entry editable=\"false\">
				<variable>WORD</variable>
				<input>cat $HOME/.config/pcdripper/chosenformat</input>
			</entry>
		</hbox>

	</frame>
	</vbox>
</hbox>
</window>

"

RESULTS="`$GTKDIALOG --program=RIPGUI --center`"

###exit the program if the X button is pushed - This doesn't work because there is a gtkdialog bug that won't let you X out the app when the menu function is used in the gui
if [ "`echo $RESULTS | grep abort`" != "" ]; then
	rm -f $HOME/.config/pcdripper/tmp/pcdripper* 2>/dev/null
		#ps aux | grep /usr/sbin/pcdripper | tr -s ' ' | sed 's/ /|/g' | cut -f 2 -d '|' | while read KILL
		#do
		#	kill -9 $KILL 2>/dev/null
		#done
	ps aux | grep '\"$GTKDIALOG\" --program=RIPGUI --center' | tr -s ' ' | sed 's/ /|/g' | cut -f 2 -d '|' | while read KILL
	do
		kill -9 $KILL 2>/dev/null
	done
	exit 2
fi

##incase quit was selected, let's exit the program
if [ "`echo $RESULTS | grep EXIT_NOW`" != "" ]; then
	rm -f $HOME/.config/pcdripper/tmp/pcdripper* 2>/dev/null
	exit 0
fi

##these variables are used for ripping individual tracks only
TRACKTOTAL=""
ENDLOOP=""
STARTTRACK=1

echo $RESULTS | tr -s '\"' '\n' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-RESULTS

##find the selected device from the gui
DEVICE=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep PROBECOMBO= -A 1 | grep -v PROBECOMBO=`
if [ "`echo $DEVICE | grep =`" != "" ]; then
	DEVICE=/dev/cdrom
fi 

##find all the other results from the gui
if [ "`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CDPARANOIA= -A 1 | grep -v CDPARANOIA=`" != false ]; then CDRIPPER=cdparanoia
	elif [ "`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CDDA2WAV= -A 1 | grep -v CDDA2WAV=`" != false ]; then CDRIPPER=cdda2wav
	elif [ "`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep ICEDAX= -A 1 | grep -v ICEDAX=`" != false ]; then CDRIPPER=icedax
fi
CDDBQUERY=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CDDBQUERY= -A 1 | grep -v CDDBQUERY=`
NOTAGS=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep NOTAGS= -A 1 | grep -v NOTAGS=`
MANUAL=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep MANUAL= -A 1 | grep -v MANUAL=`
CHECKBOX1=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX1= -A 1 | grep -v CHECKBOX1=`
echo $CHECKBOX1 > $HOME/.config/pcdripper/cbox1
CHECKBOX2=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX2= -A 1 | grep -v CHECKBOX2=`
echo $CHECKBOX2 > $HOME/.config/pcdripper/cbox2
CHECKBOX3=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX3= -A 1 | grep -v CHECKBOX3=`
echo $CHECKBOX3 > $HOME/.config/pcdripper/cbox3
CHECKBOX4=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX4= -A 1 | grep -v CHECKBOX4=`
echo $CHECKBOX4 > $HOME/.config/pcdripper/cbox4
CHECKBOX5=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX5= -A 1 | grep -v CHECKBOX5=`
echo $CHECKBOX5 > $HOME/.config/pcdripper/cbox5
CHECKBOX6=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX6= -A 1 | grep -v CHECKBOX6=`
echo $CHECKBOX6 > $HOME/.config/pcdripper/cbox6
CHECKBOX7=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX7= -A 1 | grep -v CHECKBOX7=`
echo $CHECKBOX7 > $HOME/.config/pcdripper/cbox7
CHECKBOX8=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep CHECKBOX8= -A 1 | grep -v CHECKBOX8=`
echo $CHECKBOX8 > $HOME/.config/pcdripper/cbox8
ENTRY1=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep ENTRY1= -A 1 | grep -v ENTRY1=`
if [ "`echo $ENTRY1 | grep =`" != "" ]; then
	ENTRY1=$HOME
fi
echo "$ENTRY1" > $HOME/.config/pcdripper/savedir
if [ "$NOTAGS" = false ]; then
	ENTRY2=""
else
	ENTRY2=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep ENTRY2= -A 1 | grep -v ENTRY2= | sed 's/ /_/g'`
fi
if [ "`echo $ENTRY2 | grep =`" != "" ]; then
	ENTRY2=""
fi
if [ "$CHECKBOX6" = true ]; then
	ENTRY3=""
else
	ENTRY3="`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep ENTRY3= -A 1 | grep -v ENTRY3= | sed 's/ //g'`"
fi
if [ "`echo $ENTRY3 | grep =`" != "" ]; then
	ENTRY3=""
fi 
if [ "$ENTRY3" = "" ]; then
	CHECKBOX6=true
	echo $CHECKBOX6 > $HOME/.config/pcdripper/cbox6
fi
if [ "$NOTAGS" = false ]; then
	ENTRY4=`cat $HOME/.config/pcdripper/tmp/pcdripper-RESULTS | grep ENTRY4= -A 1 | grep -v ENTRY4=`
else
	ENTRY4=""
fi
if [ "`echo $ENTRY4 | grep -o [A-Z]`" != "" ]; then
	echo $ENTRY4 | grep -o [A-Z] | tr -s '\n' ' ' | sed 's/ //g' > $HOME/.config/pcdripper/nameformat
fi
WORD=`cat $HOME/.config/pcdripper/chosenformat`

##Check for various taggers
VTAGGER=""
if [ "`which apetag`" != "" ]; then VTAGGER=apetag
elif [ "`which id3tag`" != "" ]; then VTAGGER=id3tag
elif [ "`which mp3info`" != "" ]; then VTAGGER=mp3info
fi

##non-supported tagging formats
NONTAG=""
if [ "$WORD" = aac ]; then
	NONTAG=yes
fi
if [ "$WORD" = wav ]; then
	NONTAG=yes
fi
if [ "$WORD" = shn ]; then 
	VTAG=true
	if [ "$VTAGGER" = "" ]; then
		NONTAG=yes
	fi
fi
if [ "$WORD" = mpp ]; then
	VTAG=true
	MUSEPACK=yes
	if [ "$VTAGGER" = "" ]; then
		NONTAG=yes
	fi
fi
if [ "$WORD" = mpc ]; then
	VTAG=true
	MUSEPACK=yes
	if [ "$VTAGGER" = "" ]; then
		NONTAG=yes
	fi
fi
if [ "$WORD" = ape ]; then
	VTAG=true
	if [ "$VTAGGER" = "" ]; then
		NONTAG=yes
	fi
fi
##incase output to a single track was selected & tagging is to be performed
##we'll get rid of the output to a single file since that can't be tagged correctly.
if [ "$CHECKBOX3" = true ]; then
	if [ "$NOTAGS" = false ]; then
		CHECKBOX3=false
		echo $CHECKBOX3 > $HOME/.config/pcdripper/cbox3
	fi
fi

if [ "$CDDBQUERY" = true ]; then

	##cddb_query was selected now lets make sure it's found in your $PATH
	if [ "`which cddb_query`" = "" ]; then	
		export MAIN_DIALOG="
		<vbox>
			<text wrap=\"true\" width-chars=\"40\">
				<label>$L33</label>
			</text>
			<hbox>
				<button>
					<input file icon=\"gtk-ok\"></input>
					<label>$L2</label>
					<action type=\"exit\">Exit-now</action>
				</button>
			</hbox>
		</vbox>
		"
		NOCDDB=`$GTKDIALOG --program=MAIN_DIALOG --center`
		pcdripper &
		exit 0
	fi
fi

#cddetect scan
if [ "`echo $RESULTS | grep CDDETECT_SCAN`" != "" ]; then
	cddetect -d $DEVICE  > $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	if [ "`which iconv`" != "" ]; then
		iconv --from-code=ISO-8859-1 --to-code=UTF-8 $HOME/.config/pcdripper/tmp/pcdripper-cdscan > $HOME/.config/pcdripper/tmp/pcdripper-cdscan2
		mv $HOME/.config/pcdripper/tmp/pcdripper-cdscan2 $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	fi
	export SCANBOX="
	<window title=\"CDDETECT_SCAN \"icon-name=\"gtk-cdrom\">
		<hbox>
			<vbox>
				<frame $L34:>
					<edit>
						<variable>INFO</variable>
						<input file>$HOME/.config/pcdripper/tmp/pcdripper-cdscan</input> 
						<width>400</width>
						<height>320</height>
					</edit>
				</frame>
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</hbox>
	</window>
	"
	SCAN=`$GTKDIALOG --program=SCANBOX --center`
	pcdripper &
	exit 0
fi

#cd-info scan
if [ "`echo $RESULTS | grep CD-INFO_SCAN`" != "" ]; then
	cd-info -C $DEVICE > $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	if [ "`which iconv`" != "" ]; then
		iconv --from-code=ISO-8859-1 --to-code=UTF-8 $HOME/.config/pcdripper/tmp/pcdripper-cdscan > $HOME/.config/pcdripper/tmp/pcdripper-cdscan2
		mv $HOME/.config/pcdripper/tmp/pcdripper-cdscan2 $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	fi
	export SCANBOX="
	<window title=\"CD-INFO_SCAN \"icon-name=\"gtk-cdrom\">
		<hbox>
			<vbox>
				<frame $L35:>
					<edit>
						<variable>INFO</variable>
						<input file>$HOME/.config/pcdripper/tmp/pcdripper-cdscan</input> 
						<width>400</width>
						<height>320</height>
					</edit>
				</frame>
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>OK</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</hbox>
	</window>
	"
	SCAN=`$GTKDIALOG --program=SCANBOX --center`
	pcdripper &
	exit 0
fi

##paranoia scan cd gui
if [ "`echo $RESULTS | grep SCAN_CD_NOW`" != "" ]; then
	if [ "$CDRIPPER" = cdparanoia ]; then
		cdparanoia -Q -d $DEVICE 2> $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	else
		$CDRIPPER dev=$DEVICE -info-only 2> $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	fi
	if [ "`which iconv`" != "" ]; then
		iconv --from-code=ISO-8859-1 --to-code=UTF-8 $HOME/.config/pcdripper/tmp/pcdripper-cdscan > $HOME/.config/pcdripper/tmp/pcdripper-cdscan2
		mv $HOME/.config/pcdripper/tmp/pcdripper-cdscan2 $HOME/.config/pcdripper/tmp/pcdripper-cdscan
	fi
	export SCANBOX="
	<window title=\"$CDRIPPER CD-SCAN \"icon-name=\"gtk-cdrom\">
		<hbox>
			<vbox>
				<frame $CDRIPPER $L36:>
					<edit>
						<variable>INFO</variable>
						<input file>$HOME/.config/pcdripper/tmp/pcdripper-cdscan</input> 
						<width>400</width>
						<height>320</height>
					</edit>
				</frame>
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</hbox>
	</window>
	"
	SCAN=`$GTKDIALOG --program=SCANBOX --center`
	pcdripper &
	exit 0
fi

if [ "`echo $RESULTS | grep CDDB_SCAN_NOW`" != "" ]; then

	##message dialog so the user knows the program is working
	export CDDATABASESCAN="
	<vbox>
		<text wrap=\"true\" width-chars=\"40\">
			<label>$L37</label>
		</text>
		<hbox>
			<button>
				<input file icon=\"gtk-ok\"></input>
				<label>$L2</label>
				<action type=\"exit\">Exit-now</action>
			</button>
		</hbox>
	</vbox>
	"
	MESSAGE=`$GTKDIALOG --program=CDDATABASESCAN --center` &

	##cddb_query scan gui
	cddb_query -i $DEVICE -s freedb.freedb.org -p 80 -P http read > $HOME/.config/pcdripper/tmp/pcdripper-cddb
	if [ "`which iconv`" != "" ]; then
		iconv --from-code=ISO-8859-1 --to-code=UTF-8 $HOME/.config/pcdripper/tmp/pcdripper-cddb > $HOME/.config/pcdripper/tmp/pcdripper-cddb2
		mv $HOME/.config/pcdripper/tmp/pcdripper-cddb2 $HOME/.config/pcdripper/tmp/pcdripper-cddb
	fi
	NUM2KILL=`ps aux | grep "$GTKDIALOG --program=CDDATABASESCAN --center" | tr -s ' ' | cut -f 2 -d ' ' | grep -v grep | head -n 1`
	kill -9 "$NUM2KILL" 2>/dev/null
	export CDDB="
	<window title=\"CDDB INFO \"icon-name=\"gtk-cdrom\">
		<hbox>
			<vbox>
				<frame $L36:>
					<edit>
						<variable>INFO</variable>
						<input file>$HOME/.config/pcdripper/tmp/pcdripper-cddb</input> 
						<width>400</width>
						<height>320</height>
					</edit>
				</frame>
				<hbox>
					<button>
						<label>musicbrainz</label>
						<action>cddb_query -i $DEVICE -s freedb.musicbrainz.org -p 80 -P http read | tr -s ' ' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-cddb</action>
						<action>refresh:INFO</action>
					</button>
					<button>
						<label>freedb</label>
						<action>cddb_query -i $DEVICE -s freedb.freedb.org -p 80 -P http read | tr -s ' ' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-cddb</action>
						<action>refresh:INFO</action>
					</button>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</hbox>
	</window>
	"
	cddbscan=`$GTKDIALOG --program=CDDB --center`
	rm -f $HOME/.config/pcdripper/tmp/pcdripper-cddb
	pcdripper &
	exit 0
fi

##if rip is selected from the main gui
if [ "`echo $RESULTS | grep TIME_TO_RIP`" != "" ]; then

	##if cddb_query is selected from the main gui
	if [ "$CDDBQUERY" = true ]; then 

		if [ "$NONTAG" = yes ]; then

			export MAIN_DIALOG="
			<vbox>
				<text wrap=\"true\" width-chars=\"40\">
					<label>$L38.</label>
				</text>
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
			"
			NORXVT=`$GTKDIALOG --program=MAIN_DIALOG --center`

		fi

		##message dialog so the user knows the program is working
		export CDDATABASESCAN="
		<vbox>
			<text wrap=\"true\" width-chars=\"40\">
				<label>$L37</label>
			</text>
			<hbox>
				<button>
					<input file icon=\"gtk-ok\"></input>
					<label>$L2</label>
					<action type=\"exit\">Exit-now</action>
				</button>
			</hbox>
		</vbox>
		"
		MESSAGE=`$GTKDIALOG --program=CDDATABASESCAN --center` &

		##enter the cddb_query results into a temp file
		cddb_query -i $DEVICE -s freedb.freedb.org -p 80 -P http read | tr -s ' ' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-cddb
		if [ "`which iconv`" != "" ]; then
			iconv --from-code=ISO-8859-1 --to-code=UTF-8 $HOME/.config/pcdripper/tmp/pcdripper-cddb > $HOME/.config/pcdripper/tmp/pcdripper-cddb2
			mv $HOME/.config/pcdripper/tmp/pcdripper-cddb2 $HOME/.config/pcdripper/tmp/pcdripper-cddb
		fi
		NUM2KILL=`ps aux | grep "$GTKDIALOG --program=CDDATABASESCAN --center" | tr -s ' ' | cut -f 2 -d ' ' | grep -v grep | head -n 1`
		kill -9 "$NUM2KILL" 2>/dev/null
		
		##show the cddb_query results. If this info is wrong, uncheck the box and go back to the main gui to start over.
		export CDDB="
		<window title=\"CDDB INFO \"icon-name=\"gtk-cdrom\">
			<hbox>
				<vbox>
					<frame $L36:>
						<edit>
							<variable>INFO</variable>
							<input file>$HOME/.config/pcdripper/tmp/pcdripper-cddb</input> 
							<width>400</width>
							<height>320</height>
						</edit>
					</frame>
					<hbox>
						<checkbox>
							<label>$L39</label>
							<variable>CBOX</variable>
							<default>true</default>
						</checkbox>
						<button>
							<label>musicbrainz</label>
							<action>cddb_query -i $DEVICE -s freedb.musicbrainz.org -p 80 -P http read | tr -s ' ' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-cddb</action>
							<action>refresh:INFO</action>
						</button>
						<button>
							<label>freedb</label>
							<action>cddb_query -i $DEVICE -s freedb.freedb.org -p 80 -P http read | tr -s ' ' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-cddb</action>
							<action>refresh:INFO</action>
						</button>
						<button>
							<input file icon=\"gtk-ok\"></input>
							<label>$L2</label>
							<action type=\"exit\">Exit-now</action>
						</button>
					</hbox>
				</vbox>
			</hbox>
		</window>
		"
		RESULTS2=`$GTKDIALOG --program=CDDB --center`
		
		cat $HOME/.config/pcdripper/tmp/pcdripper-cddb | grep "\[" | grep "\]" | grep "(" | grep ")" | sed "s/' by /' /g" > $HOME/.config/pcdripper/tmp/pcdripper-cddb2

		##find the desired results from the cddb_query temp file
		ARTIST="`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb | grep ^Artist: | sed 's/Artist: //g'`"
		ALBUM="`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb | grep ^Title: | sed 's/Title: //g'`"
		GENRE="`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb | grep ^Genre: | sed 's/Genre: //g'`"
		YEAR=`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb | grep ^Year: | sed 's/Year: //g' | head -c 5`

		CBOX=`echo $RESULTS2 | tr -s ' ' '\n' | grep CBOX= | cut -f 2 -d "\"" | sed 's/\"$//g'`

		if [ $CBOX = false ]; then
			pcdripper &
			exit 0
		fi

	fi ##end cddb_query portion

	##musepack compression gui
	if [ "$MUSEPACK" = yes ]; then
		EXTRATAGS=yes
		APETAG=yes
		export MAIN_DIALOG="
		<frame $L40>
			<vbox>
				<radiobutton active=\"false\">
					<label>thumb - 58-86 Kbps</label>
					<variable>thumb</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>radio - 112-152 Kbps</label>
					<variable>radio</variable>
				</radiobutton>
				<radiobutton active=\"true\">
					<label>standard - 142-184 Kbps</label>
					<variable>standard</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>xtreme - 168-212 Kbps</label>
					<variable>xtreme</variable>
				</radiobutton>
   
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</frame>
		"

		ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`

		ENCODE2=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '='`

	fi ##end musepack compression gui

	##mac (ape) compression gui
	if [ "$WORD" = ape ]; then
		EXTRATAGS=yes
		APETAG=yes
		export MAIN_DIALOG="
		<frame $L40>
			<vbox>
				<radiobutton active=\"false\">
					<label>c1000 - fastest</label>
					<variable>c1000</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>c2000</label>
					<variable>c2000</variable>
				</radiobutton>
				<radiobutton active=\"true\">
					<label>c3000</label>
					<variable>c3000</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>c4000</label>
					<variable>c4000</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>c5000 - highest compression</label>
					<variable>c5000</variable>
				</radiobutton>
   
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</frame>
		"

		ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`

		ENCODE2=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '='`

	fi ##end mac compression gui

	##flac compression gui
	if [ "$WORD" = flac ]; then
		EXTRATAGS=yes
		export MAIN_DIALOG="
		<frame $L40>
			<vbox>
				<radiobutton active=\"false\">
					<label>0 - fastest</label>
					<variable>R0</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>1</label>
					<variable>R1</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>2</label>
					<variable>R2</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>3</label>
					<variable>R3</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>4</label>
					<variable>R4</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>5</label>
					<variable>R5</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>6</label>
					<variable>R6</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>7</label>
					<variable>R7</variable>
				</radiobutton>
				<radiobutton active=\"true\">
					<label>8 - highest compression</label>
					<variable>R8</variable>
				</radiobutton>

				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</frame>
		"

		ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`

		ENCODE2=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '=' | sed 's/R//g'`
		ENCODE="flac -f -$ENCODE2"

	fi ##end flac compression gui

	FAAC=""
	if [ "$WORD" = mp4 ]; then
		FAAC=yes
	fi
	if [ "$WORD" = m4a ]; then
		FAAC=yes
	fi
	if [ "$WORD" = aac ]; then
		FAAC=yes
	fi
	##faac (mp4, m4a, aac) encoding
	if [ "$FAAC" = yes ]; then
		export MAIN_DIALOG="
		<frame $L41>
			<vbox>
				<radiobutton active=\"false\">
					<label>60</label>
					<variable>R60</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>96</label>
					<variable>R96</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>112</label>
					<variable>R112</variable>
				</radiobutton>
				<radiobutton active=\"true\">
					<label>128</label>
					<variable>R128</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>152</label>
					<variable>R152</variable>
				</radiobutton>
   
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</frame>
		"

		ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`
		ENCODE2=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '=' | sed 's/R//g'`
		ENCODE="faac -b $ENCODE2"

	fi ##end faac encoding

	##ogg/wma encoding
	ENCODEBITRATE=""
	if [ "$WORD" = ogg ]; then
		ENCODEBITRATE=yes
	fi
	if [ "$WORD" = wma ]; then
		ENCODEBITRATE=yes
	fi

	if [ "$ENCODEBITRATE" = yes ]; then
		export MAIN_DIALOG="
		<frame $L41>
			<vbox>
				<radiobutton active=\"false\">
					<label>32 lowest quality</label>
					<variable>R32</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>40</label>
					<variable>R40</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>48</label>
					<variable>R48</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>56</label>
					<variable>R56</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>64</label>
					<variable>R64</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>80</label>
					<variable>R80</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>96</label>
					<variable>R96</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>112</label>
					<variable>R112</variable>
				</radiobutton>
				<radiobutton active=\"true\">
					<label>128</label>
					<variable>R128</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>160</label>
					<variable>R160</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>192</label>
					<variable>R192</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>224</label>
					<variable>R224</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>256</label>
					<variable>R256</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>320 $L42</label>
					<variable>R320</variable>
				</radiobutton>

				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action type=\"exit\">Exit-now</action>
					</button>
				</hbox>
			</vbox>
		</frame>
		"

		ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`
		ENCODE2=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '=' | sed 's/R//g'`
		ENCODE="oggenc -b $ENCODE2"

	fi ##end ogg/wma encoding

	##mp3 encoding
	if [ "$WORD" = mp3 ]; then
		export MAIN_DIALOG="
		<vbox>
			<frame $L43>
				<radiobutton active=\"true\">
					<label>$L44</label>
					<variable>Rb</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>$L45</label>
					<variable>RV</variable>
				</radiobutton>
			</frame>
			<frame $L46>
				<radiobutton active=\"true\">
					<label>$L47</label>
					<variable>Rms</variable>
				</radiobutton>
				<radiobutton active=\"false\">
					<label>$L48</label>
					<variable>Rmm</variable>
				</radiobutton>
			</frame>
			<hbox>
				<button>
					<input file icon=\"gtk-ok\"></input>
					<label>$L2</label>
					<action type=\"exit\">Exit-now</action>
				</button>
			</hbox>
		</vbox>

		"

		ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`
		ENCODE2=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '=' | sed 's/R//g'`

		##find stereo or mono
		if [ "`echo $ENCODE2 | grep ms`" = "" ]; then
			CHANNELS=mm
		else
			CHANNELS=mj
		fi
		##find "varying bit ratio" or "constant bit ratio"
		if [ "`echo $ENCODE2 | grep V`" = "" ]; then
			BR=b
		else
			BR=V
		fi

		##if "constant bit ratio"
		if [ "$BR" = b ]; then
			export MAIN_DIALOG="
			<frame $L41>
				<vbox>
					<radiobutton active=\"false\">
						<label>32 $L42</label>
						<variable>R32</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>40</label>
						<variable>R40</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>48</label>
						<variable>R48</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>56</label>
						<variable>R56</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>64</label>
						<variable>R64</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>80</label>
						<variable>R80</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>96</label>
						<variable>R96</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>112</label>
						<variable>R112</variable>
					</radiobutton>
					<radiobutton active=\"true\">
						<label>128</label>
						<variable>R128</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>160</label>
						<variable>R160</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>192</label>
						<variable>R192</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>224</label>
						<variable>R224</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>256</label>
						<variable>R256</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>320 $L42</label>
						<variable>R320</variable>
					</radiobutton>

					<hbox>
						<button>
							<input file icon=\"gtk-ok\"></input>
							<label>$L2</label>
							<action type=\"exit\">Exit-now</action>
						</button>
					</hbox>
				</vbox>
			</frame>
			"

			ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`
			ENCODE3=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '=' | sed 's/R//g'`
		fi

		##if "varying bit ratio"
		if [ "$BR" = V ]; then
			export MAIN_DIALOG="
			<frame $L50>
				<vbox>
					<radiobutton active=\"false\">
						<label>0 - $L42</label>
						<variable>R0</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>1</label>
						<variable>R1</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>2</label>
						<variable>R2</variable>
					</radiobutton>
					<radiobutton active=\"true\">
						<label>3</label>
						<variable>R3</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>4</label>
						<variable>R4</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>5</label>
						<variable>R5</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>6</label>
						<variable>R6</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>7</label>
						<variable>R7</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>8</label>
						<variable>R8</variable>
					</radiobutton>
					<radiobutton active=\"false\">
						<label>9 - $L49</label>
						<variable>R9</variable>
					</radiobutton>

					<hbox>
						<button>
							<input file icon=\"gtk-ok\"></input>
							<label>$L2</label>
							<action type=\"exit\">Exit-now</action>
						</button>
					</hbox>
				</vbox>
			</frame>
			"

			ENCODE=`$GTKDIALOG --program=MAIN_DIALOG --center`
			ENCODE3=`echo $ENCODE | tr -s ' ' '\n' | grep true | cut -f 1 -d '=' | sed 's/R//g'`
		fi

	fi ##end mp3 encoding

	##cdparanoia options from the main gui checkboxes
	if [ "$CHECKBOX1" = true ]; then
		DP=-Z
	fi
	if [ "$CHECKBOX2" = true ]; then
		DEP=-Y
	fi
	if [ "$CHECKBOX4" = true ]; then
		EBR=-X
	fi
	OPTIONS="`echo $DP $DEP $EBR | tr -s ' '`"
	if [ "`echo $ENTRY3 | grep [0-9]`" = "" ]; then
		ENTRY3=""
	fi
	if [ "`echo $ENTRY3 | grep [0-9]`" = "" ]; then
		ENTRY3=""
	fi

	##scan number of tracks on the disc
	TOTALTRACKS=""
	if [ "`which cddetect`" != "" ]; then
		cddetect -d $DEVICE > $HOME/.config/pcdripper/tmp/pcdripper-cddetect
		TOTALTRACKS=`cat $HOME/.config/pcdripper/tmp/pcdripper-cddetect | grep audio | sed 's/ //g' | cut -f 1 -d ':' | grep ^[0-9] | tail -n 1`
	fi
	if [ "$TOTALTRACKS" = "" ]; then
		if [ "`which cd-info`" != "" ]; then
			TOTALTRACKS=`cd-info -C $DEVICE | grep leadout -B 5 | grep audio | sed 's/ //g' | cut -f 1 -d ':' | tail -n 1 | grep [0-9]`
		fi
	fi
	if [ "$TOTALTRACKS" = "" ]; then
		if [ "`which cdparanoia`" != "" ]; then
			cdparanoia -Q -d $DEVICE 2> $HOME/.config/pcdripper/tmp/pcdripper-tracks1
			cat $HOME/.config/pcdripper/tmp/pcdripper-tracks1 | sed 's/ //g' | grep ^[1-9] > $HOME/.config/pcdripper/tmp/pcdripper-tracks2
			TOTALTRACKS=`wc -l $HOME/.config/pcdripper/tmp/pcdripper-tracks2 | sed -e "s/ *//" | sed -e "s/ .*//g" | grep [0-9]`
		fi
	fi
	if [ "$TOTALTRACKS" = "" ]; then
		if [ "`which icedax`" != "" ]; then
			icedax dev=$DEVICE -info-only 2> $HOME/.config/pcdripper/tmp/pcdripper-icedax
			TOTALTRACKS=`cat $HOME/.config/pcdripper/tmp/pcdripper-icedax | grep AUDIOtrack -A 1 | tr -s ' ' | cut -f 2 -d '-' | sed 's/^ //g' | cut -f 1 -d ' ' | tail -n 1 | grep [0-9]`
		fi
	fi
	if [ "$TOTALTRACKS" = "" ]; then
		if [ "`which cdda2wav`" != "" ]; then
			cdda2wav dev=$DEVICE -info-only 2> $HOME/.config/pcdripper/tmp/pcdripper-cdda2wav
			TOTALTRACKS=`cat $HOME/.config/pcdripper/tmp/pcdripper-cdda2wav | grep AUDIOtrack -A 1 | tr -s ' ' | cut -f 2 -d '-' | sed 's/^ //g' | cut -f 1 -d ' ' | tail -n 1 | grep [0-9]`
		fi
	fi

	if [ "$TOTALTRACKS" = "" ]; then
		export MAIN_DIALOG="
		<vbox>
			<text wrap=\"true\" width-chars=\"40\">
				<label>$L51.</label>
			</text>
			<hbox>
				<button>
					<input file icon=\"gtk-ok\"></input>
					<label>$L2</label>
					<action type=\"exit\">Exit-now</action>
				</button>
			</hbox>
		</vbox>
		"
		NOAUDIO=`$GTKDIALOG --program=MAIN_DIALOG --center`
		pcdripper &
		exit 0
	fi

	if [ "$ENTRY3" != "" ]; then
		##Rip designated range
		if [ "`echo $ENTRY3 | grep '-'`" != "" ]; then
			TRACKS=`echo $ENTRY3 | cut -f 1 -d '-' | grep -o [0-9] | tr '\n' ' ' | sed 's/ //g'`
			LASTTRACK=`echo $ENTRY3 | cut -f 2 -d '-' | grep -o [0-9] | tr '\n' ' ' | sed 's/ //g'`
			TOOMUCH=`expr $LASTTRACK + 1`

			if [ "$LASTTRACK" -gt "$TOTALTRACKS" ]; then
				LASTTRACK=`echo $TOTALTRACKS`
				TOOMUCH=`expr $LASTTRACK + 1`
			fi

			if [ "$TRACKS" -gt "$LASTTRACK" ]; then
				export MAIN_DIALOG="
				<vbox>
					<text wrap=\"true\" width-chars=\"40\">
						<label>$L52.</label>
					</text>
					<hbox>
						<button>
							<input file icon=\"gtk-ok\"></input>
							<label>$L2</label>
							<action type=\"exit\">Exit-now</action>
						</button>
					</hbox>
				</vbox>
				"
				NORXVT=`$GTKDIALOG --program=MAIN_DIALOG --center`
				pcdripper &
				exit 0
			fi
		fi

		##Rip single track
		if [ "`echo $ENTRY3 | grep '-'`" = "" ]; then
			if [ "`echo $ENTRY3 | grep ','`" = "" ]; then
				TRACKS=`echo $ENTRY3 | grep -o [0-9] | tr '\n' ' ' | sed 's/ //g'`
				TOOMUCH=`expr $TRACKS + 1`

				##make sure track is less than the total tracks on the disc, otherwise go back to the main gui to re-enter
				if [ "$TRACKS" -gt "$TOTALTRACKS" ]; then
					export MAIN_DIALOG="
					<vbox>
						<text wrap=\"true\" width-chars=\"40\">
							<label>$L53</label>
						</text>
						<hbox>
							<button>
								<input file icon=\"gtk-ok\"></input>
								<label>$L2</label>
								<action type=\"exit\">Exit-now</action>
							</button>
						</hbox>
					</vbox>
					"
					NORXVT=`$GTKDIALOG --program=MAIN_DIALOG --center`
					pcdripper &
					exit 0
				fi
			fi
		fi

		##Rip designated selections (not range) (i.e. 1,3,5)
		if [ "`echo $ENTRY3 | grep '-'`" = "" ]; then
			if [ "`echo $ENTRY3 | grep ','`" != "" ]; then
				NUMCOMMAS=`echo $ENTRY3 | grep -o , | wc -l`
				TOOMANY=`expr $NUMCOMMAS + 2`
				TOOMUCH=`expr $TOTALTRACKS + 1`
				STARTLOOP=1
				rm -f $HOME/.config/pcdripper/tmp/pcdripper-DESIGNATED
				while [ "$STARTLOOP" != "$TOOMANY" ]; do
					TRACKTOADD=`echo $ENTRY3 | cut -f $STARTLOOP -d ',' | grep [0-9]`
					if [ "`echo $TRACKTOADD`" -lt "`echo $TOOMUCH`" ]; then 
						echo $TRACKTOADD >> $HOME/.config/pcdripper/tmp/pcdripper-DESIGNATED
					fi
					STARTLOOP=`expr $STARTLOOP + 1`
				done
				TRACKTOTAL=`cat $HOME/.config/pcdripper/tmp/pcdripper-DESIGNATED | wc -l`
			fi
		fi

	fi 

	if [ "$ENTRY3" = "" ]; then
		##Rip all tracks
		LASTTRACK=$TOTALTRACKS
		TOOMUCH=`expr $LASTTRACK + 1`
		TRACKS=1
	fi

	##if a rip directory was not selected the files will rip to your home directory
	if [ "$ENTRY1" = "" ]; then
		ENTRY1=$HOME
	fi
	cd "$ENTRY1"

	##just incase for some unknown reason the rip/encode script is already in /tmp/ it will be removed
	##so the new one can be created.
	rm -f $HOME/.config/pcdripper/tmp/pcdripper-ripcli

	##while loop to build the rip/encode script
	while [ "$TRACKS" != "$TOOMUCH" ]; do
	
		##this is the code necessary to rip individual tracks (i.e. 1,3,5,9) 2,4,7,10
		if [ "$TRACKTOTAL" != "" ]; then
			TRACKS=`cat $HOME/.config/pcdripper/tmp/pcdripper-DESIGNATED | sed -n "$STARTTRACK"p` 
			TOOMUCH=999
			if [ "$TRACKS" = "" ]; then
				TRACKS=`expr $TOOMUCH - 1`
				ENDLOOP=yes
			fi
		fi

		if [ "$CHECKBOX3" = true ]; then
			TRACKS2=$LASTTRACK
			if [ "$TRACKS2" = "" ]; then
				TRACKS2=$TRACKS
			fi
		else
			TRACKS2=$TRACKS
		fi

		##add a zero before single digit track numbers
		if [ "`echo $TRACKS | wc -c | sed 's/ //g'`" = 2 ]; then
			NUM=0"$TRACKS"
		else
			NUM=$TRACKS
		fi

		##more cddb only stuff
		if [ "$CDDBQUERY" = true ]; then 
			##get the trackname from the cddb_query temp file
			TRACKNAME=`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb2 | tail -n $TOTALTRACKS | cut -f 2 -d "]" | cut -f 1 -d "(" | sed 's/^ //g' | sed "s/'//g" | sed "s/ $ARTIST //g" | sed -n "$TRACKS"p | sed 's/[ \t]*$//'`
		fi ##end of cddb only stuff 

		##if the trackname is "" it will be renamed to the choosen name from within the gui
		if [ "$TRACKNAME" = "" ]; then
			TRACKNAME="$ENTRY2"
		fi

		##the manual tagging gui (incase cddb_query doesn't work and you want to tag your files)
		if [ "$MANUAL" = true ]; then

			##try to obtain any cd text information for tags
			PREVIOUS=`expr $TRACKS - 1`
			if ! [ -f $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS ]; then
				touch $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS
			fi
			if [ "`which cd-info`" != "" ]; then
				if ! [ -f $HOME/.config/pcdripper/tmp/pcdripper-cddb3 ]; then
					cd-info -C $DEVICE | grep 'CD Analysis Report' -A 999 > $HOME/.config/pcdripper/tmp/pcdripper-cddb3
				fi
				CDINFONAME=`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb3 | grep "Track $TRACKS:" -A 20 | grep -a 'TITLE:' | head -n 1 | sed 's/:/|/' | cut -f 2 -d '|' | sed 's/^ //' | sed 's/ $//'`
				CDINFOARTIST=`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb3 | grep "Track $TRACKS:" -A 20 | grep -a 'PERFORMER:' | head -n 1 | sed 's/:/|/' | cut -f 2 -d '|' | sed 's/^ //' | sed 's/ $//'`
				CDINFOALBUM=`cat $HOME/.config/pcdripper/tmp/pcdripper-cddb3 | grep 'CD-TEXT for Disc:' -A 20 | grep -a 'TITLE:' | head -n 1 | sed 's/:/|/' | cut -f 2 -d '|' | sed 's/^ //' | sed 's/ $//'`
				echo trackname="$CDINFONAME" > $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS
				echo artist="$CDINFOARTIST" >> $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS
				echo album="$CDINFOALBUM" >> $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS
				if [ "$CDINFOARTIST" != "" ]; then
					echo artist="$CDINFOARTIST" >> $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS
				fi
				if [ "$CDINFOALBUM" != "" ]; then
					echo album="$CDINFOALBUM" >> $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS
				fi
			fi
			
			if [ "$NONTAG" = yes ]; then

				export MAIN_DIALOG="
				<vbox>
					<text wrap=\"true\" width-chars=\"40\">
						<label>$L54.</label>
					</text>
					<hbox>
						<button>
							<input file icon=\"gtk-ok\"></input>
							<label>$L2</label>
							<action type=\"exit\">Exit-now</action>
						</button>
					</hbox>
				</vbox>
				"
				NORXVT=`$GTKDIALOG --program=MAIN_DIALOG --center`

			fi

			if [ "$TRACKS" != 998 ]; then

				export RIPGUI2="
				<window title=\"ID_tags \"icon-name=\"gtk-cdrom\">
					<hbox>
						<vbox>
							<text use-markup=\"true\"><label>Track number $TRACKS</label></text>   
							<text><label>___________________________________________________</label></text>
     
							<text><label>$L55</label></text>
							<hbox>
								<entry>
									<variable>NAME</variable>
									<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep -a trackname= | tail -n 1 | sed 's/^trackname=//'</input>
								</entry>
							</hbox>

							<text><label>$L56</label></text>
							<hbox>
								<entry>
									<variable>YEAR</variable>
									<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a date= | tail -n 1 | sed 's/^date=//'</input>
								</entry>
							</hbox>
   
							<text><label>$L57</label></text>
							<hbox>
								<entry>
									<variable>ALBUM</variable>
									<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a album= | tail -n 1 | sed 's/^album=//'</input>
								</entry>
							</hbox>
    
							<text><label>$L59</label></text>
							<hbox>
								<entry>
									<variable>ARTIST</variable>
									<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a artist= | tail -n 1 | sed 's/^artist=//'</input>
								</entry>
							</hbox>
    
							<text><label>$L60</label></text>
							<hbox>
								<entry>
									<variable>GENRE</variable>
									<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a genre= | tail -n 1 | sed 's/^genre=//'</input>
								</entry>
							</hbox>
    
							<text><label>$L61</label></text>
							<hbox>
								<entry>
									<variable>COMMENT</variable>
									<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a comment= | tail -n 1 | sed 's/^comment=//'</input>
								</entry>
							</hbox>
							"
							if [ "$EXTRATAGS" = yes ]; then
								RIPGUI2="$RIPGUI2
								<text><label>$L62</label></text>
								<hbox>
									<entry>
										<variable>COMPOSER</variable>
										<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a composer= | tail -n 1 | sed 's/^composer=//'</input>
									</entry>
								</hbox>
    
								<text><label>$L63</label></text>
								<hbox>
									<entry>
										<variable>LYRICIST</variable>
										<input>cat $HOME/.config/pcdripper/tmp/pcdripper-$PREVIOUS | grep -a lyricist= | tail -n 1 | sed 's/^lyricist=//'</input>
									</entry>
								</hbox>
								"
							fi
							RIPGUI2="$RIPGUI2
 
							<text><label>___________________________________________________</label></text>
    
							<hbox>
								<button>
									<input file icon=\"gtk-ok\"></input>
									<label>$L64</label>
									<action>echo date=\$YEAR | tee $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo title=\$NAME | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo album=\$ALBUM | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo artist=\$ARTIST | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo genre=\$GENRE | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo comment=\$COMMENT | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo composer=\$COMPOSER | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action>echo lyricist=\$LYRICIST | tee -a $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS</action>
									<action type=\"exit\">Exit by button</action>
								</button>   
								<button>
									<input file icon=\"gtk-quit\"></input>
									<label>$L9</label>
									<action type=\"exit\">EXIT_NOW</action>
								</button>
							</hbox>
    
						</vbox>
					</hbox>
				</window>
				"
				IDTAGS=`$GTKDIALOG --program=RIPGUI2 --center`
				if [ "`echo $IDTAGS | grep EXIT_NOW`" != "" ]; then
					pcdripper &
					exit 0
				fi
				##find the results from the manual tagging gui
				ARTIST="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep artist= | sed 's/artist=//g' | tr -s ' '`"
				ALBUM="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep album= | sed 's/album=//g' | tr -s ' '`"
				TRACKNAME="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep title= | sed 's/title=//g' | tr -s ' '`"
				GENRE="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep genre= | sed 's/genre=//g' | tr -s ' '`"
				COMMENT="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep comment= | sed 's/comment=//g' | tr -s ' '`"
				COMPOSER="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep composer= | sed 's/composer=//g' | tr -s ' '`"
				LYRICIST="`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep lyricist= | sed 's/lyricist=//g' | tr -s ' '`"
				YEAR=`cat $HOME/.config/pcdripper/tmp/pcdripper-$TRACKS | grep date= | sed 's/date=//g' | sed 's/ //g'`
			fi
		fi

		##if no tagging is selected or the results aren't populated from the other options than
		##unknown results will be encoded into the files
		if [ "$YEAR" = "" ]; then
			YEAR=0000
		fi
		if [ "$YEAR" = 0 ]; then
			YEAR=0000
		fi
		if [ "$ARTIST" = "" ]; then
			ARTIST=unknown
		fi
		if [ "$ALBUM" = "" ]; then
			ALBUM=unknown
		fi
		if [ "$TRACKNAME" = "" ]; then
			TRACKNAME=unknown
		fi
		if [ "$GENRE" = "" ]; then
			GENRE=other
		fi
		if [ "$GENRE" = unknown ]; then
			GENRE=other
		fi

		##use lame to find a suitable genre list and use the "other" category if selected not found
		##this way lame won't choke on an unknown genre
		lame --genre-list 2>&1 | grep -i "$GENRE" | sed 's/[0-9]//g' | tr -s ' ' | sed 's/^ //g' > $HOME/.config/pcdripper/tmp/pcdripper-genrelist

		GENRELINES=`wc -l $HOME/.config/pcdripper/tmp/pcdripper-genrelist`
		if [ "$GENRELINES" != 1 ]; then
			BYTES=`echo "$GENRE" | wc -c`
			cat $HOME/.config/pcdripper/tmp/pcdripper-genrelist | while read GENRE1
			do
				BYTES2=`echo "$GENRE1" | wc -c`
				if [ "$BYTES" = "$BYTES2" ]; then
					echo "$GENRE1" > $HOME/.config/pcdripper/tmp/pcdripper-genre
				fi
			done
			if [ "`cat $HOME/.config/pcdripper/tmp/pcdripper-genre | grep -i -o \"$GENRE\"`" != "" ]; then
				GENRE=`cat $HOME/.config/pcdripper/tmp/pcdripper-genre | grep -i -o "$GENRE"`
			else
				GENRE=`cat $HOME/.config/pcdripper/tmp/pcdripper-genre | sed -n 1p`
			fi
		else
			GENRE=`cat $HOME/.config/pcdripper/tmp/pcdripper-genrelist`
		fi
		if [ "$GENRE" = "" ]; then
			GENRE=other
		fi


		##if no tags is not selected
		if [ "$NOTAGS" = false ]; then
			rm -f $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
			##get the info from the main gui in regards to the file naming scheme
			NUMLINES=`echo "$ENTRY4" | grep -o [A-Z] | wc -l`
			START=1
			END=`expr $NUMLINES + 1`
			##while loop to build the file name format into the rip/encode script
			while [ "$START" != "$END" ]; do
				LETTER=`echo "$ENTRY4" | grep -o [A-Z] | sed -n "$START"p`
				if [ "$LETTER" = T ]; then
					echo "$NUM" >> $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
				fi
				if [ "$LETTER" = N ]; then
					echo "$TRACKNAME" >> $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
				fi
				if [ "$LETTER" = A ]; then
					echo "$ARTIST" >> $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
				fi
				if [ "$LETTER" = Y ]; then
					echo "$YEAR" >> $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
				fi
				if [ "$LETTER" = L ]; then
					echo "$ALBUM" >> $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
				fi
				if [ "$LETTER" = G ]; then
					echo "$GENRE" >> $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT
				fi
				START=`expr $START + 1`
			done
			LINE=`cat $HOME/.config/pcdripper/tmp/pcdripper-NAMEFORMAT | tr -s '\n' '-' | sed 's/-*$//g'`
		else
			##if no tagging is selected this will name the files with whatever is put in the entrybox then the track number
			LINE="$TRACKNAME""$NUM"
		fi

		##another safeguard incase the naming scheme wasn't populated
		if [ "$LINE" = "" ]; then
			LINE="$NUM"-"$TRACKNAME"
		fi

		##set the encoding options for the various formats for the rip/encode script
		if [ "$WORD" = flac ]; then
			ENCODE2="$ENCODE - -o \"$LINE\".flac"
		fi

		if [ "$WORD" = ogg ]; then
			ENCODE2="$ENCODE -a \"$ARTIST\" -l \"$ALBUM\" -t \"$TRACKNAME\" -G \"$GENRE\" -d \"$YEAR\" -N \"$TRACKS\" -c \"$COMMENT\" - -o \"$LINE\".ogg"
		fi

		if [ "$WORD" = shn ]; then
			ENCODE2="shorten - \"$LINE\".shn"
		fi

		if [ "$WORD" = mp3 ]; then
			ENCODE2="lame - --add-id3v2 --ty \"$YEAR\" --tn \"$TRACKS\" --ta \"$ARTIST\" --tl \"$ALBUM\" --tt \"$TRACKNAME\" --tg \"$GENRE\" --tc \"$COMMENT\" -\"$BR\" \"$ENCODE3\" -\"$CHANNELS\" \"$LINE\".mp3"
		fi

		if [ "$WORD" = ape ]; then
			ENCODELINE="mac \"$LINE\".wav \"$LINE\".ape -\"$ENCODE2\""
		fi

		if [ "$MUSEPACK" = yes ]; then
			ENCODE2="mppenc --$ENCODE2 - \"$LINE\".$WORD"
		fi

		if [ "$WORD" = wma ]; then
			ENCODELINE="ffmpeg -i \"$LINE\".wav -ab \"$ENCODE2\"k -year \"$YEAR\" -track \"$TRACKS\" -author \"$ARTIST\" -album \"$ALBUM\" -title \"$TRACKNAME\" -comment \"$COMMENT\" \"$LINE\".wma"
		fi

		if [ "$FAAC" = yes ]; then
			if [ "$WORD" != aac ]; then
				ENCODE2="$ENCODE --artist \"$ARTIST\" --title \"$TRACKNAME\" --genre \"$GENRE\" --album \"$ALBUM\" --year \"$YEAR\" --track \"$TRACKS\" --comment \"$COMMENT\" - -o \"$LINE\".\"$WORD\""
			fi
		fi

		if [ "$WORD" = aac ]; then
			ENCODE2="$ENCODE - -o \"$LINE\".aac"
		fi
		##encoding options done

		if [ "$ENDLOOP" != yes ]; then

			NOSTDIN=""
			if [ "$WORD" = wma ]; then
				VTAG=true
				NOSTDIN=yes
			fi
			if [ "$WORD" = ape ]; then
				NOSTDIN=yes
			fi
			if [ "$WORD" = wav ]; then
				NOSTDIN=yes
			fi

			##wavs aren't encoded so they get their own part of the script to create the rip/encode script
			if [ "$NOSTDIN" = yes ]; then
				if [ "$CDRIPPER" = cdparanoia ]; then
					if [ "$CHECKBOX7" = true ]; then
						echo cdparanoia -l$NUM.log -z5 "$OPTIONS" "$TRACKS"-"$TRACKS2" -d "$DEVICE" \"$LINE\".wav >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
					else
						echo cdparanoia -z5 "$OPTIONS" "$TRACKS"-"$TRACKS2" -d "$DEVICE" \"$LINE\".wav >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
					fi
					echo mv "track\"$NUM\".\"$LINE\".wav" "\"$LINE\".wav" >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
				else
					echo $CDRIPPER dev="$DEVICE" -t "$TRACKS" \"$LINE\".wav >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
					echo rm -f \"$LINE\".inf >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
				fi
				if [ "$WORD" != wav ]; then
					echo "$ENCODELINE" >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
					echo rm -f \"$LINE\".wav >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
				fi
			else
				##incase any other format besides wav was chosen here is where the rip/encode script is built
				if [ "$CDRIPPER" = cdparanoia ]; then
					if [ "$CHECKBOX7" = true ]; then
						echo cdparanoia -l$NUM.log -z5 "$OPTIONS" "$TRACKS"-"$TRACKS2" -d "$DEVICE" - \| "$ENCODE2"  >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
					else
						echo cdparanoia -z5 "$OPTIONS" "$TRACKS"-"$TRACKS2" -d "$DEVICE" - \| "$ENCODE2"  >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
					fi
				else
					echo $CDRIPPER dev="$DEVICE" -t "$TRACKS" - \| "$ENCODE2" >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
				fi
			fi

			if [ "$NOTAGS" = false ]; then
				if [ "$CHECKBOX3" = false ]; then
					if [ "$WORD" = flac ]; then
						if [ "`which metaflac`" != "" ]; then
							##tagging flac files is done post encoding with metaflac
							echo metaflac --set-tag=TRACKNUMBER=$TRACKS --set-tag=ARTIST=\"$ARTIST\" --set-tag=ALBUM=\"$ALBUM\" --set-tag=TITLE=\"$TRACKNAME\" --set-tag=GENRE=\"$GENRE\" --set-tag=DATE=$YEAR --set-tag=COMMENT=\"$COMMENT\" --set-tag=COMPOSER=\"$COMPOSER\" --set-tag=LYRICIST=\"$LYRICIST\" \"$LINE\".flac >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
						fi
					fi

					if [ "$VTAG" = true ]; then
						if [ "$VTAGGER" != "" ]; then
							if [ "$VTAGGER" = apetag ]; then
								echo apetag -i \"$LINE\".$WORD -m overwrite -p TRACKNUMBER=\"$TRACKS\" -p ARTIST=\"$ARTIST\" -p ALBUM=\"$ALBUM\" -p TITLE=\"$TRACKNAME\" -p GENRE=\"$GENRE\" -p DATE=\"$YEAR\" -p LYRICIST=\"$LYRICIST\" -p COMMENT=\"$COMMENT\" -p COMPOSER=\"$COMPOSER\" >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
							fi

							if [ "$VTAGGER" = id3tag ]; then
								echo id3tag -1 --artist=\"$ARTIST\" --album=\"$ALBUM\" --song=\"$TRACKNAME\" --year=\"$YEAR\" --track=\"$TRACKS\" --genre=\"$GENRE\" --comment=\"$COMMENT\" \"$LINE\".$WORD >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
							fi

							if [ "$VTAGGER" = mp3info ]; then
								echo mp3info -d -f \"$LINE\".$WORD >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
								echo mp3info -a \"$ARTIST\" -g \"$GENRE\" -l \"$ALBUM\" -n \"$TRACKS\" -t \"$TRACKNAME\" -y \"$YEAR\" -c \"$COMMENT\" -f \"$LINE\".$WORD >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
							fi

						fi
					fi

				fi
			fi

		fi

		if [ "$TRACKS2" != "$TRACKS" ]; then
			TRACKS=$TOOMUCH
		else
			TRACKS=`expr $TRACKS + 1`
			STARTTRACK=`expr $STARTTRACK + 1`
		fi
	done ##big loop to create the rip/encode script is complete

	##rip/encode complete now eject the cd incase option was selected
	if [ "$CHECKBOX5" = true ]; then
		echo eject $DEVICE >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
	fi

	##rip/encode complete now play a sound incase option was selected
	if [ "$CHECKBOX8" = true ]; then
		if [ -f "$AUDIOFILE" ]; then
			echo $PLAY "$AUDIOFILE" >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli
		fi
	fi
	echo exit 0 >> $HOME/.config/pcdripper/tmp/pcdripper-ripcli

	##show the script that is going to be executed
	export RIPCLI="
	<window title=\"$L65 \"icon-name=\"gtk-cdrom\">
		<hbox>
			<vbox>
				<frame $L66:>
					<edit>
						<variable>INFO</variable>
						<input file>$HOME/.config/pcdripper/tmp/pcdripper-ripcli</input> 
						<width>600</width>
						<height>320</height>
					</edit>
				</frame>
				<hbox>
					<button>
						<input file icon=\"gtk-ok\"></input>
						<label>$L2</label>
						<action>echo \"\$INFO\" | tee $HOME/.config/pcdripper/tmp/pcdripper-ripcli2</action>
						<action type=\"exit\">Exit-now</action>
					</button>
					<button>
						<input file icon=\"gtk-quit\"></input>
						<label>$L9</label>
						<action>echo \"\$INFO\" | tee $HOME/.config/pcdripper/tmp/pcdripper-ripcli2</action>
						<action type=\"exit\">KILL_THIS_SCRIPT</action>
					</button>
				</hbox>
			</vbox>
		</hbox>
	</window>
	"
	RIPCLI2=`$GTKDIALOG --program=RIPCLI --center` 

	if [ "`echo \"$RIPCLI2\" | grep EXIT= | grep KILL_THIS_SCRIPT`" != "" ]; then
		rm -f $HOME/.config/pcdripper/tmp/* 2>/dev/null
		exit 0
	fi

	if [ "`echo \"$RIPCLI2\" | grep EXIT= | grep abort`" != "" ]; then
		rm -f $HOME/.config/pcdripper/tmp/* 2>/dev/null
		exit 1
	fi

	##make the script executable & run it in rxvt
	chmod a+x $HOME/.config/pcdripper/tmp/pcdripper-ripcli2
	if [ "$TERMINAL" = rxvt ]; then
		rxvt -bg black -fg green -title pcdripper --geometry 79x20 -e $HOME/.config/pcdripper/tmp/pcdripper-ripcli2
	else
		$TERMINAL -e $HOME/.config/pcdripper/tmp/pcdripper-ripcli2
	fi
	##create log files if requested - flac fingerprint - shntool output - md5sum - cdparanoia logs
	if [ "$CHECKBOX7" = true ]; then
		if [ "$CDRIPPER" = cdparanoia ]; then
			if [ "`ls *.log 2>/dev/null`" != "" ]; then
				ls *.log | while read LOG
				do
					LINES=`cat "$LOG" | sed '/^$/d' | head -n 2`
					TRACK=`echo "$LOG" | sed 's/.log//'`
					TAIL=`cat "$LOG" | sed '/^$/d' | tail -n 1`
					echo "$LINES" >> cdparanoia.log
					echo $L87 "$TRACK" >> cdparanoia.log
					echo "$TAIL" >> cdparanoia.log
					echo >> cdparanoia.log
					echo -------------------------------------------------------------------------------------- >> cdparanoia.log
					echo >> cdparanoia.log
					rm -f "$LOG" 2>/dev/null
				done
				echo "$L69:" >> cdparanoia.log
				echo ":-)   $L70" >> cdparanoia.log
				echo ":-|   $L71" >> cdparanoia.log
				echo ":-/   $L72" >> cdparanoia.log
				echo ":-P   $L73" >> cdparanoia.log
				echo "8-|   $L74" >> cdparanoia.log
				echo ":-0   $L75" >> cdparanoia.log
				echo ":-(   $L76" >> cdparanoia.log
				echo ";-(   $L77" >> cdparanoia.log
				echo "8-X   $L78" >> cdparanoia.log
				echo ":^D   $L79" >> cdparanoia.log
				echo >> cdparanoia.log
				echo "$L80:" >> cdparanoia.log
				echo "$L81" >> cdparanoia.log
				echo "-    $L82" >> cdparanoia.log
				echo "+    $L83" >> cdparanoia.log
				echo "!    $L84" >> cdparanoia.log
				echo "e    $L85" >> cdparanoia.log
				echo "V    $L86" >> cdparanoia.log
			fi	
		fi
		DIRECTORY=`pwd`
		NAME="`basename \"$DIRECTORY\"`"
		if [ "$WORD" = flac ]; then
			if [ "`which metaflac`" != "" ]; then
				ls *.flac | while read FLAC
				do
					FFP=`metaflac --show-md5sum "$FLAC"`
					echo "$FLAC":"$FFP" >> "$NAME".ffp #I know you can just do <metaflac --show-md5sum *.flac> but this is just incase 1 file is ripped
				done
			fi
		fi
		ls *.$WORD | while read AUDIO
		do
			md5sum "$AUDIO" | sed 's/  / */' >> "$NAME".md5
		done
		if [ "`which shntool`" != "" ]; then
			array=(ape flac shn wav)
			for item in ${array[*]}
			do
				if [ "$item" = "$WORD" ]; then
					shntool len *.$WORD > "$NAME"-shntool.txt
					echo >> "$NAME"-shntool.txt
					shntool info *.$WORD >> "$NAME"-shntool.txt
				fi
			done
		fi
	fi
fi ##end cd rip/encode portion

##remove all the temp files
rm -f $HOME/.config/pcdripper/tmp/pcdripper* 

##Ask to rip another disc
export MAIN_DIALOG="
<vbox>
	<text wrap=\"true\" width-chars=\"40\">
		<label>$L67</label>
	</text>
	<hbox>
		<button>
			<input file icon=\"gtk-ok\"></input>
			<label>$L2</label>
			<action type=\"exit\">Exit-RIP</action>
		</button>
    	<button>
			<input file stock=\"gtk-quit\"></input>
			<label>$L9</label>
			<action type=\"exit\">EXIT_NOW</action>
		</button>
	</hbox>
</vbox>
"
RIPAGAIN=`$GTKDIALOG --program=MAIN_DIALOG --center`
if [ "`echo $RIPAGAIN | grep Exit-RIP`" != "" ]; then
	pcdripper &
	else
	exit 0
fi

exit 0 ##all done
